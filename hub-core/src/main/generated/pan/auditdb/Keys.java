/*
 * Things
 *
 * Copyright (c) 2014, Markus Binsteiner. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3.0 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library.
 */

/**
 * This class is generated by jOOQ
 */
package pan.auditdb;

/**
 * This class is generated by jOOQ.
 * <p>
 * A class modelling foreign key relationships between tables of the <code>pandora_audit</code>
 * schema
 */
@javax.annotation.Generated(value = {"http://www.jooq.org", "3.3.2"},
        comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    private static class Identities0 extends org.jooq.impl.AbstractKeys {
        public static org.jooq.Identity<pan.auditdb.tables.records.AuditRecord, java.lang.Long> IDENTITY_AUDIT = createIdentity(pan.auditdb.tables.Audit.AUDIT, pan.auditdb.tables.Audit.AUDIT.RECORD_ID);
        public static org.jooq.Identity<pan.auditdb.tables.records.IncidentsRecord, java.lang.Integer> IDENTITY_INCIDENTS = createIdentity(pan.auditdb.tables.Incidents.INCIDENTS, pan.auditdb.tables.Incidents.INCIDENTS.ID);
    }

    private static class UniqueKeys0 extends org.jooq.impl.AbstractKeys {
        public static final org.jooq.UniqueKey<pan.auditdb.tables.records.AbbreviationsRecord> KEY_ABBREVIATIONS_PRIMARY = createUniqueKey(pan.auditdb.tables.Abbreviations.ABBREVIATIONS, pan.auditdb.tables.Abbreviations.ABBREVIATIONS.ID);
        public static final org.jooq.UniqueKey<pan.auditdb.tables.records.AffiliationRecord> KEY_AFFILIATION_PRIMARY = createUniqueKey(pan.auditdb.tables.Affiliation.AFFILIATION, pan.auditdb.tables.Affiliation.AFFILIATION.ID);
        public static final org.jooq.UniqueKey<pan.auditdb.tables.records.AuditRecord> KEY_AUDIT_JOBDID_UNIQUE = createUniqueKey(pan.auditdb.tables.Audit.AUDIT, pan.auditdb.tables.Audit.AUDIT.JOBID);
        public static final org.jooq.UniqueKey<pan.auditdb.tables.records.AuditRecord> KEY_AUDIT_PRIMARY = createUniqueKey(pan.auditdb.tables.Audit.AUDIT, pan.auditdb.tables.Audit.AUDIT.RECORD_ID);
        public static final org.jooq.UniqueKey<pan.auditdb.tables.records.IncidentsRecord> KEY_INCIDENTS_PRIMARY = createUniqueKey(pan.auditdb.tables.Incidents.INCIDENTS, pan.auditdb.tables.Incidents.INCIDENTS.ID);
        public static final org.jooq.UniqueKey<pan.auditdb.tables.records.NomenclatureRecord> KEY_NOMENCLATURE_PROJECT = createUniqueKey(pan.auditdb.tables.Nomenclature.NOMENCLATURE, pan.auditdb.tables.Nomenclature.NOMENCLATURE.PROJECT);
        public static final org.jooq.UniqueKey<pan.auditdb.tables.records.OrganisationRecord> KEY_ORGANISATION_PRIMARY = createUniqueKey(pan.auditdb.tables.Organisation.ORGANISATION, pan.auditdb.tables.Organisation.ORGANISATION.ID);
        public static final org.jooq.UniqueKey<pan.auditdb.tables.records.ProjectAllocationRecord> KEY_PROJECT_ALLOCATION_PRIMARY = createUniqueKey(pan.auditdb.tables.ProjectAllocation.PROJECT_ALLOCATION, pan.auditdb.tables.ProjectAllocation.PROJECT_ALLOCATION.PROJECT_ID);
        public static final org.jooq.UniqueKey<pan.auditdb.tables.records.UsermapRecord> KEY_USERMAP_PRIMARY = createUniqueKey(pan.auditdb.tables.Usermap.USERMAP, pan.auditdb.tables.Usermap.USERMAP.ID);
    }

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------
    public static final org.jooq.Identity<pan.auditdb.tables.records.AuditRecord, java.lang.Long> IDENTITY_AUDIT = Identities0.IDENTITY_AUDIT;
    public static final org.jooq.Identity<pan.auditdb.tables.records.IncidentsRecord, java.lang.Integer> IDENTITY_INCIDENTS = Identities0.IDENTITY_INCIDENTS;
    public static final org.jooq.UniqueKey<pan.auditdb.tables.records.AbbreviationsRecord> KEY_ABBREVIATIONS_PRIMARY = UniqueKeys0.KEY_ABBREVIATIONS_PRIMARY;
    public static final org.jooq.UniqueKey<pan.auditdb.tables.records.AffiliationRecord> KEY_AFFILIATION_PRIMARY = UniqueKeys0.KEY_AFFILIATION_PRIMARY;
    public static final org.jooq.UniqueKey<pan.auditdb.tables.records.AuditRecord> KEY_AUDIT_JOBDID_UNIQUE = UniqueKeys0.KEY_AUDIT_JOBDID_UNIQUE;
    public static final org.jooq.UniqueKey<pan.auditdb.tables.records.AuditRecord> KEY_AUDIT_PRIMARY = UniqueKeys0.KEY_AUDIT_PRIMARY;
    public static final org.jooq.UniqueKey<pan.auditdb.tables.records.IncidentsRecord> KEY_INCIDENTS_PRIMARY = UniqueKeys0.KEY_INCIDENTS_PRIMARY;
    public static final org.jooq.UniqueKey<pan.auditdb.tables.records.NomenclatureRecord> KEY_NOMENCLATURE_PROJECT = UniqueKeys0.KEY_NOMENCLATURE_PROJECT;
    public static final org.jooq.UniqueKey<pan.auditdb.tables.records.OrganisationRecord> KEY_ORGANISATION_PRIMARY = UniqueKeys0.KEY_ORGANISATION_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------
    public static final org.jooq.UniqueKey<pan.auditdb.tables.records.ProjectAllocationRecord> KEY_PROJECT_ALLOCATION_PRIMARY = UniqueKeys0.KEY_PROJECT_ALLOCATION_PRIMARY;
    public static final org.jooq.UniqueKey<pan.auditdb.tables.records.UsermapRecord> KEY_USERMAP_PRIMARY = UniqueKeys0.KEY_USERMAP_PRIMARY;
}
