/*
 * Things
 *
 * Copyright (c) 2014, Markus Binsteiner. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3.0 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library.
 */

/**
 * This class is generated by jOOQ
 */
package pan.auditdb.tables;

/**
 * This class is generated by jOOQ.
 * <p>
 * InnoDB free: 8458240 kB
 */
@javax.annotation.Generated(value = {"http://www.jooq.org", "3.3.2"},
        comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({"all", "unchecked", "rawtypes"})
public class AuditProjectPrev extends org.jooq.impl.TableImpl<pan.auditdb.tables.records.AuditProjectPrevRecord> {

    /**
     * The singleton instance of <code>pandora_audit.audit_project_prev</code>
     */
    public static final pan.auditdb.tables.AuditProjectPrev AUDIT_PROJECT_PREV = new pan.auditdb.tables.AuditProjectPrev();
    private static final long serialVersionUID = -843782682;
    /**
     * The column <code>pandora_audit.audit_project_prev.core_hours</code>.
     */
    public final org.jooq.TableField<pan.auditdb.tables.records.AuditProjectPrevRecord, java.math.BigDecimal> CORE_HOURS = createField("core_hours", org.jooq.impl.SQLDataType.DECIMAL.precision(47, 4), this, "");
    /**
     * The column <code>pandora_audit.audit_project_prev.grid_jobs</code>.
     */
    public final org.jooq.TableField<pan.auditdb.tables.records.AuditProjectPrevRecord, java.math.BigInteger> GRID_JOBS = createField("grid_jobs", org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(23), this, "");
    /**
     * The column <code>pandora_audit.audit_project_prev.jobs</code>.
     */
    public final org.jooq.TableField<pan.auditdb.tables.records.AuditProjectPrevRecord, java.lang.Long> JOBS = createField("jobs", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");
    /**
     * The column <code>pandora_audit.audit_project_prev.month</code>.
     */
    public final org.jooq.TableField<pan.auditdb.tables.records.AuditProjectPrevRecord, java.lang.String> MONTH = createField("month", org.jooq.impl.SQLDataType.VARCHAR.length(2), this, "");
    /**
     * The column <code>pandora_audit.audit_project_prev.parallel_core_hours</code>.
     */
    public final org.jooq.TableField<pan.auditdb.tables.records.AuditProjectPrevRecord, java.math.BigDecimal> PARALLEL_CORE_HOURS = createField("parallel_core_hours", org.jooq.impl.SQLDataType.DECIMAL.precision(45, 2), this, "");
    /**
     * The column <code>pandora_audit.audit_project_prev.parallel_jobs</code>.
     */
    public final org.jooq.TableField<pan.auditdb.tables.records.AuditProjectPrevRecord, java.math.BigInteger> PARALLEL_JOBS = createField("parallel_jobs", org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(23), this, "");
    /**
     * The column <code>pandora_audit.audit_project_prev.project</code>.
     */
    public final org.jooq.TableField<pan.auditdb.tables.records.AuditProjectPrevRecord, java.lang.String> PROJECT = createField("project", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");
    /**
     * The column <code>pandora_audit.audit_project_prev.serial_core_hours</code>.
     */
    public final org.jooq.TableField<pan.auditdb.tables.records.AuditProjectPrevRecord, java.math.BigDecimal> SERIAL_CORE_HOURS = createField("serial_core_hours", org.jooq.impl.SQLDataType.DECIMAL.precision(45, 2), this, "");
    /**
     * The column <code>pandora_audit.audit_project_prev.serial_jobs</code>.
     */
    public final org.jooq.TableField<pan.auditdb.tables.records.AuditProjectPrevRecord, java.math.BigInteger> SERIAL_JOBS = createField("serial_jobs", org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(23), this, "");
    /**
     * The column <code>pandora_audit.audit_project_prev.total_cores</code>.
     */
    public final org.jooq.TableField<pan.auditdb.tables.records.AuditProjectPrevRecord, java.math.BigInteger> TOTAL_CORES = createField("total_cores", org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(32), this, "");
    /**
     * The column <code>pandora_audit.audit_project_prev.total_grid_core_hours</code>.
     */
    public final org.jooq.TableField<pan.auditdb.tables.records.AuditProjectPrevRecord, java.math.BigDecimal> TOTAL_GRID_CORE_HOURS = createField("total_grid_core_hours", org.jooq.impl.SQLDataType.DECIMAL.precision(45, 2), this, "");
    /**
     * The column <code>pandora_audit.audit_project_prev.user</code>.
     */
    public final org.jooq.TableField<pan.auditdb.tables.records.AuditProjectPrevRecord, java.lang.String> USER = createField("user", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");
    /**
     * The column <code>pandora_audit.audit_project_prev.waiting_time</code>.
     */
    public final org.jooq.TableField<pan.auditdb.tables.records.AuditProjectPrevRecord, java.math.BigDecimal> WAITING_TIME = createField("waiting_time", org.jooq.impl.SQLDataType.DECIMAL.precision(37, 4), this, "");
    /**
     * The column <code>pandora_audit.audit_project_prev.year</code>.
     */
    public final org.jooq.TableField<pan.auditdb.tables.records.AuditProjectPrevRecord, java.lang.String> YEAR = createField("year", org.jooq.impl.SQLDataType.VARCHAR.length(4), this, "");

    /**
     * Create a <code>pandora_audit.audit_project_prev</code> table reference
     */
    public AuditProjectPrev() {
        this("audit_project_prev", null);
    }

    /**
     * Create an aliased <code>pandora_audit.audit_project_prev</code> table reference
     */
    public AuditProjectPrev(java.lang.String alias) {
        this(alias, pan.auditdb.tables.AuditProjectPrev.AUDIT_PROJECT_PREV);
    }

    private AuditProjectPrev(java.lang.String alias, org.jooq.Table<pan.auditdb.tables.records.AuditProjectPrevRecord> aliased) {
        this(alias, aliased, null);
    }

    private AuditProjectPrev(java.lang.String alias, org.jooq.Table<pan.auditdb.tables.records.AuditProjectPrevRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, pan.auditdb.PandoraAudit.PANDORA_AUDIT, aliased, parameters, "InnoDB free: 8458240 kB");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public pan.auditdb.tables.AuditProjectPrev as(java.lang.String alias) {
        return new pan.auditdb.tables.AuditProjectPrev(alias, this);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public java.lang.Class<pan.auditdb.tables.records.AuditProjectPrevRecord> getRecordType() {
        return pan.auditdb.tables.records.AuditProjectPrevRecord.class;
    }

    /**
     * Rename this table
     */
    public pan.auditdb.tables.AuditProjectPrev rename(java.lang.String name) {
        return new pan.auditdb.tables.AuditProjectPrev(name, null);
    }
}
