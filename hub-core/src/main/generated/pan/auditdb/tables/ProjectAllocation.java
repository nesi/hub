/*
 * Things
 *
 * Copyright (c) 2014, Markus Binsteiner. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3.0 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library.
 */

/**
 * This class is generated by jOOQ
 */
package pan.auditdb.tables;

/**
 * This class is generated by jOOQ.
 * <p>
 * InnoDB free: 8458240 kB
 */
@javax.annotation.Generated(value = {"http://www.jooq.org", "3.3.2"},
        comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({"all", "unchecked", "rawtypes"})
public class ProjectAllocation extends org.jooq.impl.TableImpl<pan.auditdb.tables.records.ProjectAllocationRecord> {

    /**
     * The singleton instance of <code>pandora_audit.project_allocation</code>
     */
    public static final pan.auditdb.tables.ProjectAllocation PROJECT_ALLOCATION = new pan.auditdb.tables.ProjectAllocation();
    private static final long serialVersionUID = 694451524;
    /**
     * The column <code>pandora_audit.project_allocation.allocation_hours</code>.
     */
    public final org.jooq.TableField<pan.auditdb.tables.records.ProjectAllocationRecord, java.lang.Long> ALLOCATION_HOURS = createField("allocation_hours", org.jooq.impl.SQLDataType.BIGINT, this, "");
    /**
     * The column <code>pandora_audit.project_allocation.allocation_type</code>.
     */
    public final org.jooq.TableField<pan.auditdb.tables.records.ProjectAllocationRecord, java.lang.String> ALLOCATION_TYPE = createField("allocation_type", org.jooq.impl.SQLDataType.VARCHAR.length(40).defaulted(true), this, "");
    /**
     * The column <code>pandora_audit.project_allocation.allocation_used</code>.
     */
    public final org.jooq.TableField<pan.auditdb.tables.records.ProjectAllocationRecord, java.lang.Long> ALLOCATION_USED = createField("allocation_used", org.jooq.impl.SQLDataType.BIGINT, this, "");
    /**
     * The column <code>pandora_audit.project_allocation.project_finish_date</code>.
     */
    public final org.jooq.TableField<pan.auditdb.tables.records.ProjectAllocationRecord, java.lang.Integer> PROJECT_FINISH_DATE = createField("project_finish_date", org.jooq.impl.SQLDataType.INTEGER, this, "");
    /**
     * The column <code>pandora_audit.project_allocation.project_id</code>.
     */
    public final org.jooq.TableField<pan.auditdb.tables.records.ProjectAllocationRecord, java.lang.String> PROJECT_ID = createField("project_id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");
    /**
     * The column <code>pandora_audit.project_allocation.project_start_date</code>.
     */
    public final org.jooq.TableField<pan.auditdb.tables.records.ProjectAllocationRecord, java.lang.Integer> PROJECT_START_DATE = createField("project_start_date", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>pandora_audit.project_allocation</code> table reference
     */
    public ProjectAllocation() {
        this("project_allocation", null);
    }

    /**
     * Create an aliased <code>pandora_audit.project_allocation</code> table reference
     */
    public ProjectAllocation(java.lang.String alias) {
        this(alias, pan.auditdb.tables.ProjectAllocation.PROJECT_ALLOCATION);
    }

    private ProjectAllocation(java.lang.String alias, org.jooq.Table<pan.auditdb.tables.records.ProjectAllocationRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProjectAllocation(java.lang.String alias, org.jooq.Table<pan.auditdb.tables.records.ProjectAllocationRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, pan.auditdb.PandoraAudit.PANDORA_AUDIT, aliased, parameters, "InnoDB free: 8458240 kB");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public pan.auditdb.tables.ProjectAllocation as(java.lang.String alias) {
        return new pan.auditdb.tables.ProjectAllocation(alias, this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public java.util.List<org.jooq.UniqueKey<pan.auditdb.tables.records.ProjectAllocationRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<pan.auditdb.tables.records.ProjectAllocationRecord>>asList(pan.auditdb.Keys.KEY_PROJECT_ALLOCATION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.UniqueKey<pan.auditdb.tables.records.ProjectAllocationRecord> getPrimaryKey() {
        return pan.auditdb.Keys.KEY_PROJECT_ALLOCATION_PRIMARY;
    }

    /**
     * The class holding records for this type
     */
    @Override
    public java.lang.Class<pan.auditdb.tables.records.ProjectAllocationRecord> getRecordType() {
        return pan.auditdb.tables.records.ProjectAllocationRecord.class;
    }

    /**
     * Rename this table
     */
    public pan.auditdb.tables.ProjectAllocation rename(java.lang.String name) {
        return new pan.auditdb.tables.ProjectAllocation(name, null);
    }
}
