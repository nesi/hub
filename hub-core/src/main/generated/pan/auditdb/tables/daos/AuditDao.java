/*
 * Things
 *
 * Copyright (c) 2014, Markus Binsteiner. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3.0 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library.
 */

/**
 * This class is generated by jOOQ
 */
package pan.auditdb.tables.daos;

/**
 * This class is generated by jOOQ.
 * <p>
 * InnoDB free: 8458240 kB
 */
@javax.annotation.Generated(value = {"http://www.jooq.org", "3.3.2"},
        comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({"all", "unchecked", "rawtypes"})
public class AuditDao extends org.jooq.impl.DAOImpl<pan.auditdb.tables.records.AuditRecord, pan.auditdb.tables.pojos.Audit, java.lang.Long> {

    /**
     * Create a new AuditDao without any configuration
     */
    public AuditDao() {
        super(pan.auditdb.tables.Audit.AUDIT, pan.auditdb.tables.pojos.Audit.class);
    }

    /**
     * Create a new AuditDao with an attached configuration
     */
    public AuditDao(org.jooq.Configuration configuration) {
        super(pan.auditdb.tables.Audit.AUDIT, pan.auditdb.tables.pojos.Audit.class, configuration);
    }

    /**
     * Fetch records that have <code>account IN (values)</code>
     */
    public java.util.List<pan.auditdb.tables.pojos.Audit> fetchByAccount(java.lang.String... values) {
        return fetch(pan.auditdb.tables.Audit.AUDIT.ACCOUNT, values);
    }

    /**
     * Fetch records that have <code>appstatus IN (values)</code>
     */
    public java.util.List<pan.auditdb.tables.pojos.Audit> fetchByAppstatus(java.lang.Integer... values) {
        return fetch(pan.auditdb.tables.Audit.AUDIT.APPSTATUS, values);
    }

    /**
     * Fetch records that have <code>cores IN (values)</code>
     */
    public java.util.List<pan.auditdb.tables.pojos.Audit> fetchByCores(java.lang.Integer... values) {
        return fetch(pan.auditdb.tables.Audit.AUDIT.CORES, values);
    }

    /**
     * Fetch records that have <code>done IN (values)</code>
     */
    public java.util.List<pan.auditdb.tables.pojos.Audit> fetchByDone(java.lang.Integer... values) {
        return fetch(pan.auditdb.tables.Audit.AUDIT.DONE, values);
    }

    /**
     * Fetch records that have <code>executable IN (values)</code>
     */
    public java.util.List<pan.auditdb.tables.pojos.Audit> fetchByExecutable(java.lang.String... values) {
        return fetch(pan.auditdb.tables.Audit.AUDIT.EXECUTABLE, values);
    }

    /**
     * Fetch records that have <code>flags IN (values)</code>
     */
    public java.util.List<pan.auditdb.tables.pojos.Audit> fetchByFlags(java.lang.Integer... values) {
        return fetch(pan.auditdb.tables.Audit.AUDIT.FLAGS, values);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public java.util.List<pan.auditdb.tables.pojos.Audit> fetchById(java.lang.Integer... values) {
        return fetch(pan.auditdb.tables.Audit.AUDIT.ID, values);
    }

    /**
     * Fetch records that have <code>iwd IN (values)</code>
     */
    public java.util.List<pan.auditdb.tables.pojos.Audit> fetchByIwd(java.lang.String... values) {
        return fetch(pan.auditdb.tables.Audit.AUDIT.IWD, values);
    }

    /**
     * Fetch records that have <code>jobgroup IN (values)</code>
     */
    public java.util.List<pan.auditdb.tables.pojos.Audit> fetchByJobgroup(java.lang.String... values) {
        return fetch(pan.auditdb.tables.Audit.AUDIT.JOBGROUP, values);
    }

    /**
     * Fetch records that have <code>jobid IN (values)</code>
     */
    public java.util.List<pan.auditdb.tables.pojos.Audit> fetchByJobid(java.lang.String... values) {
        return fetch(pan.auditdb.tables.Audit.AUDIT.JOBID, values);
    }

    /**
     * Fetch records that have <code>jobname IN (values)</code>
     */
    public java.util.List<pan.auditdb.tables.pojos.Audit> fetchByJobname(java.lang.String... values) {
        return fetch(pan.auditdb.tables.Audit.AUDIT.JOBNAME, values);
    }

    /**
     * Fetch records that have <code>jobtype IN (values)</code>
     */
    public java.util.List<pan.auditdb.tables.pojos.Audit> fetchByJobtype(java.lang.String... values) {
        return fetch(pan.auditdb.tables.Audit.AUDIT.JOBTYPE, values);
    }

    /**
     * Fetch records that have <code>machine IN (values)</code>
     */
    public java.util.List<pan.auditdb.tables.pojos.Audit> fetchByMachine(java.lang.String... values) {
        return fetch(pan.auditdb.tables.Audit.AUDIT.MACHINE, values);
    }

    /**
     * Fetch records that have <code>mem IN (values)</code>
     */
    public java.util.List<pan.auditdb.tables.pojos.Audit> fetchByMem(java.lang.Long... values) {
        return fetch(pan.auditdb.tables.Audit.AUDIT.MEM, values);
    }

    /**
     * Fetch records that have <code>memrequested IN (values)</code>
     */
    public java.util.List<pan.auditdb.tables.pojos.Audit> fetchByMemrequested(java.lang.Integer... values) {
        return fetch(pan.auditdb.tables.Audit.AUDIT.MEMREQUESTED, values);
    }

    /**
     * Fetch records that have <code>nodes IN (values)</code>
     */
    public java.util.List<pan.auditdb.tables.pojos.Audit> fetchByNodes(java.lang.Integer... values) {
        return fetch(pan.auditdb.tables.Audit.AUDIT.NODES, values);
    }

    /**
     * Fetch records that have <code>processors IN (values)</code>
     */
    public java.util.List<pan.auditdb.tables.pojos.Audit> fetchByProcessors(java.lang.String... values) {
        return fetch(pan.auditdb.tables.Audit.AUDIT.PROCESSORS, values);
    }

    /**
     * Fetch records that have <code>qtime IN (values)</code>
     */
    public java.util.List<pan.auditdb.tables.pojos.Audit> fetchByQtime(java.lang.Integer... values) {
        return fetch(pan.auditdb.tables.Audit.AUDIT.QTIME, values);
    }

    /**
     * Fetch records that have <code>queue IN (values)</code>
     */
    public java.util.List<pan.auditdb.tables.pojos.Audit> fetchByQueue(java.lang.String... values) {
        return fetch(pan.auditdb.tables.Audit.AUDIT.QUEUE, values);
    }

    /**
     * Fetch records that have <code>record_id IN (values)</code>
     */
    public java.util.List<pan.auditdb.tables.pojos.Audit> fetchByRecordId(java.lang.Long... values) {
        return fetch(pan.auditdb.tables.Audit.AUDIT.RECORD_ID, values);
    }

    /**
     * Fetch records that have <code>start IN (values)</code>
     */
    public java.util.List<pan.auditdb.tables.pojos.Audit> fetchByStart(java.lang.Integer... values) {
        return fetch(pan.auditdb.tables.Audit.AUDIT.START, values);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public java.util.List<pan.auditdb.tables.pojos.Audit> fetchByStatus(java.lang.Integer... values) {
        return fetch(pan.auditdb.tables.Audit.AUDIT.STATUS, values);
    }

    /**
     * Fetch records that have <code>user IN (values)</code>
     */
    public java.util.List<pan.auditdb.tables.pojos.Audit> fetchByUser(java.lang.String... values) {
        return fetch(pan.auditdb.tables.Audit.AUDIT.USER, values);
    }

    /**
     * Fetch records that have <code>utilisation IN (values)</code>
     */
    public java.util.List<pan.auditdb.tables.pojos.Audit> fetchByUtilisation(java.lang.Long... values) {
        return fetch(pan.auditdb.tables.Audit.AUDIT.UTILISATION, values);
    }

    /**
     * Fetch records that have <code>vmem IN (values)</code>
     */
    public java.util.List<pan.auditdb.tables.pojos.Audit> fetchByVmem(java.lang.Long... values) {
        return fetch(pan.auditdb.tables.Audit.AUDIT.VMEM, values);
    }

    /**
     * Fetch records that have <code>walltime IN (values)</code>
     */
    public java.util.List<pan.auditdb.tables.pojos.Audit> fetchByWalltime(java.lang.Long... values) {
        return fetch(pan.auditdb.tables.Audit.AUDIT.WALLTIME, values);
    }

    /**
     * Fetch a unique record that has <code>jobid = value</code>
     */
    public pan.auditdb.tables.pojos.Audit fetchOneByJobid(java.lang.String value) {
        return fetchOne(pan.auditdb.tables.Audit.AUDIT.JOBID, value);
    }

    /**
     * Fetch a unique record that has <code>record_id = value</code>
     */
    public pan.auditdb.tables.pojos.Audit fetchOneByRecordId(java.lang.Long value) {
        return fetchOne(pan.auditdb.tables.Audit.AUDIT.RECORD_ID, value);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected java.lang.Long getId(pan.auditdb.tables.pojos.Audit object) {
        return object.getRecordId();
    }
}
