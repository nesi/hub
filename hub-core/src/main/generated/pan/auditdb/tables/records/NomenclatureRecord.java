/*
 * Things
 *
 * Copyright (c) 2014, Markus Binsteiner. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3.0 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library.
 */

/**
 * This class is generated by jOOQ
 */
package pan.auditdb.tables.records;

/**
 * This class is generated by jOOQ.
 * <p>
 * InnoDB free: 8458240 kB
 */
@javax.annotation.Generated(value = {"http://www.jooq.org", "3.3.2"},
        comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({"all", "unchecked", "rawtypes"})
public class NomenclatureRecord extends org.jooq.impl.TableRecordImpl<pan.auditdb.tables.records.NomenclatureRecord> implements org.jooq.Record3<java.lang.String, java.lang.String, java.lang.String> {

    private static final long serialVersionUID = -892553341;

    /**
     * Create a detached NomenclatureRecord
     */
    public NomenclatureRecord() {
        super(pan.auditdb.tables.Nomenclature.NOMENCLATURE);
    }

    /**
     * Create a detached, initialised NomenclatureRecord
     */
    public NomenclatureRecord(java.lang.String project, java.lang.String name, java.lang.String study) {
        super(pan.auditdb.tables.Nomenclature.NOMENCLATURE);

        setValue(0, project);
        setValue(1, name);
        setValue(2, study);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<java.lang.String> field1() {
        return pan.auditdb.tables.Nomenclature.NOMENCLATURE.PROJECT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<java.lang.String> field2() {
        return pan.auditdb.tables.Nomenclature.NOMENCLATURE.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<java.lang.String> field3() {
        return pan.auditdb.tables.Nomenclature.NOMENCLATURE.STUDY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Row3<java.lang.String, java.lang.String, java.lang.String> fieldsRow() {
        return (org.jooq.Row3) super.fieldsRow();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>pandora_audit.nomenclature.name</code>.
     */
    public java.lang.String getName() {
        return (java.lang.String) getValue(1);
    }

    /**
     * Getter for <code>pandora_audit.nomenclature.project</code>.
     */
    public java.lang.String getProject() {
        return (java.lang.String) getValue(0);
    }

    /**
     * Getter for <code>pandora_audit.nomenclature.study</code>.
     */
    public java.lang.String getStudy() {
        return (java.lang.String) getValue(2);
    }

    /**
     * Setter for <code>pandora_audit.nomenclature.name</code>.
     */
    public void setName(java.lang.String value) {
        setValue(1, value);
    }

    /**
     * Setter for <code>pandora_audit.nomenclature.project</code>.
     */
    public void setProject(java.lang.String value) {
        setValue(0, value);
    }

    /**
     * Setter for <code>pandora_audit.nomenclature.study</code>.
     */
    public void setStudy(java.lang.String value) {
        setValue(2, value);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public java.lang.String value1() {
        return getProject();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NomenclatureRecord value1(java.lang.String value) {
        setProject(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public java.lang.String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NomenclatureRecord value2(java.lang.String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public java.lang.String value3() {
        return getStudy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NomenclatureRecord value3(java.lang.String value) {
        setStudy(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public NomenclatureRecord values(java.lang.String value1, java.lang.String value2, java.lang.String value3) {
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Row3<java.lang.String, java.lang.String, java.lang.String> valuesRow() {
        return (org.jooq.Row3) super.valuesRow();
    }
}
