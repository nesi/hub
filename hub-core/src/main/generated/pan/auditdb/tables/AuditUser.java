/*
 * Things
 *
 * Copyright (c) 2014, Markus Binsteiner. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3.0 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library.
 */

/**
 * This class is generated by jOOQ
 */
package pan.auditdb.tables;

/**
 * This class is generated by jOOQ.
 * <p>
 * InnoDB free: 8458240 kB
 */
@javax.annotation.Generated(value = {"http://www.jooq.org", "3.3.2"},
        comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({"all", "unchecked", "rawtypes"})
public class AuditUser extends org.jooq.impl.TableImpl<pan.auditdb.tables.records.AuditUserRecord> {

    /**
     * The singleton instance of <code>pandora_audit.audit_user</code>
     */
    public static final pan.auditdb.tables.AuditUser AUDIT_USER = new pan.auditdb.tables.AuditUser();
    private static final long serialVersionUID = -1586504959;
    /**
     * The column <code>pandora_audit.audit_user.cores</code>.
     */
    public final org.jooq.TableField<pan.auditdb.tables.records.AuditUserRecord, java.lang.Integer> CORES = createField("cores", org.jooq.impl.SQLDataType.INTEGER, this, "");
    /**
     * The column <code>pandora_audit.audit_user.core_hours</code>.
     */
    public final org.jooq.TableField<pan.auditdb.tables.records.AuditUserRecord, java.math.BigDecimal> CORE_HOURS = createField("core_hours", org.jooq.impl.SQLDataType.DECIMAL.precision(25, 4), this, "");
    /**
     * The column <code>pandora_audit.audit_user.done</code>.
     */
    public final org.jooq.TableField<pan.auditdb.tables.records.AuditUserRecord, java.lang.Integer> DONE = createField("done", org.jooq.impl.SQLDataType.INTEGER, this, "");
    /**
     * The column <code>pandora_audit.audit_user.executable</code>.
     */
    public final org.jooq.TableField<pan.auditdb.tables.records.AuditUserRecord, java.lang.String> EXECUTABLE = createField("executable", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "");
    /**
     * The column <code>pandora_audit.audit_user.jobtype</code>.
     */
    public final org.jooq.TableField<pan.auditdb.tables.records.AuditUserRecord, java.lang.String> JOBTYPE = createField("jobtype", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");
    /**
     * The column <code>pandora_audit.audit_user.user</code>.
     */
    public final org.jooq.TableField<pan.auditdb.tables.records.AuditUserRecord, java.lang.String> USER = createField("user", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");
    /**
     * The column <code>pandora_audit.audit_user.waiting_time</code>.
     */
    public final org.jooq.TableField<pan.auditdb.tables.records.AuditUserRecord, java.math.BigDecimal> WAITING_TIME = createField("waiting_time", org.jooq.impl.SQLDataType.DECIMAL.precision(15, 4), this, "");

    /**
     * Create a <code>pandora_audit.audit_user</code> table reference
     */
    public AuditUser() {
        this("audit_user", null);
    }

    /**
     * Create an aliased <code>pandora_audit.audit_user</code> table reference
     */
    public AuditUser(java.lang.String alias) {
        this(alias, pan.auditdb.tables.AuditUser.AUDIT_USER);
    }

    private AuditUser(java.lang.String alias, org.jooq.Table<pan.auditdb.tables.records.AuditUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private AuditUser(java.lang.String alias, org.jooq.Table<pan.auditdb.tables.records.AuditUserRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, pan.auditdb.PandoraAudit.PANDORA_AUDIT, aliased, parameters, "InnoDB free: 8458240 kB");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public pan.auditdb.tables.AuditUser as(java.lang.String alias) {
        return new pan.auditdb.tables.AuditUser(alias, this);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public java.lang.Class<pan.auditdb.tables.records.AuditUserRecord> getRecordType() {
        return pan.auditdb.tables.records.AuditUserRecord.class;
    }

    /**
     * Rename this table
     */
    public pan.auditdb.tables.AuditUser rename(java.lang.String name) {
        return new pan.auditdb.tables.AuditUser(name, null);
    }
}
