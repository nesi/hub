/**
 * This class is generated by jOOQ
 */
package projectdb.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.2" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjectallocationRecord extends org.jooq.impl.UpdatableRecordImpl<projectdb.tables.records.ProjectallocationRecord> implements org.jooq.Record5<java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.String, java.sql.Timestamp> {

	private static final long serialVersionUID = -346923777;

	/**
	 * Setter for <code>projectdb.projectallocation.id</code>.
	 */
	public void setId(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>projectdb.projectallocation.id</code>.
	 */
	public java.lang.Integer getId() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>projectdb.projectallocation.facilityId</code>.
	 */
	public void setFacilityid(java.lang.Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>projectdb.projectallocation.facilityId</code>.
	 */
	public java.lang.Integer getFacilityid() {
		return (java.lang.Integer) getValue(1);
	}

	/**
	 * Setter for <code>projectdb.projectallocation.projectId</code>.
	 */
	public void setProjectid(java.lang.Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>projectdb.projectallocation.projectId</code>.
	 */
	public java.lang.Integer getProjectid() {
		return (java.lang.Integer) getValue(2);
	}

	/**
	 * Setter for <code>projectdb.projectallocation.allocation</code>.
	 */
	public void setAllocation(java.lang.String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>projectdb.projectallocation.allocation</code>.
	 */
	public java.lang.String getAllocation() {
		return (java.lang.String) getValue(3);
	}

	/**
	 * Setter for <code>projectdb.projectallocation.lastModified</code>.
	 */
	public void setLastmodified(java.sql.Timestamp value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>projectdb.projectallocation.lastModified</code>.
	 */
	public java.sql.Timestamp getLastmodified() {
		return (java.sql.Timestamp) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row5<java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.String, java.sql.Timestamp> fieldsRow() {
		return (org.jooq.Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row5<java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.String, java.sql.Timestamp> valuesRow() {
		return (org.jooq.Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return projectdb.tables.Projectallocation.PROJECTALLOCATION.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field2() {
		return projectdb.tables.Projectallocation.PROJECTALLOCATION.FACILITYID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field3() {
		return projectdb.tables.Projectallocation.PROJECTALLOCATION.PROJECTID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field4() {
		return projectdb.tables.Projectallocation.PROJECTALLOCATION.ALLOCATION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field5() {
		return projectdb.tables.Projectallocation.PROJECTALLOCATION.LASTMODIFIED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value2() {
		return getFacilityid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value3() {
		return getProjectid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value4() {
		return getAllocation();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value5() {
		return getLastmodified();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProjectallocationRecord value1(java.lang.Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProjectallocationRecord value2(java.lang.Integer value) {
		setFacilityid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProjectallocationRecord value3(java.lang.Integer value) {
		setProjectid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProjectallocationRecord value4(java.lang.String value) {
		setAllocation(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProjectallocationRecord value5(java.sql.Timestamp value) {
		setLastmodified(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProjectallocationRecord values(java.lang.Integer value1, java.lang.Integer value2, java.lang.Integer value3, java.lang.String value4, java.sql.Timestamp value5) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ProjectallocationRecord
	 */
	public ProjectallocationRecord() {
		super(projectdb.tables.Projectallocation.PROJECTALLOCATION);
	}

	/**
	 * Create a detached, initialised ProjectallocationRecord
	 */
	public ProjectallocationRecord(java.lang.Integer id, java.lang.Integer facilityid, java.lang.Integer projectid, java.lang.String allocation, java.sql.Timestamp lastmodified) {
		super(projectdb.tables.Projectallocation.PROJECTALLOCATION);

		setValue(0, id);
		setValue(1, facilityid);
		setValue(2, projectid);
		setValue(3, allocation);
		setValue(4, lastmodified);
	}
}
