/**
 * This class is generated by jOOQ
 */
package projectdb.tables.records;

/**
 * This class is generated by jOOQ.
 *
 * NeSI and CeR staff
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.2" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AdviserRecord extends org.jooq.impl.UpdatableRecordImpl<projectdb.tables.records.AdviserRecord> implements org.jooq.Record16<java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Byte, java.lang.String, java.lang.String, java.sql.Timestamp> {

	private static final long serialVersionUID = 623998095;

	/**
	 * Setter for <code>projectdb.adviser.id</code>.
	 */
	public void setId(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>projectdb.adviser.id</code>.
	 */
	public java.lang.Integer getId() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>projectdb.adviser.fullName</code>.
	 */
	public void setFullname(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>projectdb.adviser.fullName</code>.
	 */
	public java.lang.String getFullname() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>projectdb.adviser.email</code>.
	 */
	public void setEmail(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>projectdb.adviser.email</code>.
	 */
	public java.lang.String getEmail() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>projectdb.adviser.phone</code>.
	 */
	public void setPhone(java.lang.String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>projectdb.adviser.phone</code>.
	 */
	public java.lang.String getPhone() {
		return (java.lang.String) getValue(3);
	}

	/**
	 * Setter for <code>projectdb.adviser.address</code>.
	 */
	public void setAddress(java.lang.String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>projectdb.adviser.address</code>.
	 */
	public java.lang.String getAddress() {
		return (java.lang.String) getValue(4);
	}

	/**
	 * Setter for <code>projectdb.adviser.institution</code>.
	 */
	public void setInstitution(java.lang.String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>projectdb.adviser.institution</code>.
	 */
	public java.lang.String getInstitution() {
		return (java.lang.String) getValue(5);
	}

	/**
	 * Setter for <code>projectdb.adviser.division</code>.
	 */
	public void setDivision(java.lang.String value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>projectdb.adviser.division</code>.
	 */
	public java.lang.String getDivision() {
		return (java.lang.String) getValue(6);
	}

	/**
	 * Setter for <code>projectdb.adviser.department</code>.
	 */
	public void setDepartment(java.lang.String value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>projectdb.adviser.department</code>.
	 */
	public java.lang.String getDepartment() {
		return (java.lang.String) getValue(7);
	}

	/**
	 * Setter for <code>projectdb.adviser.pictureUrl</code>.
	 */
	public void setPictureurl(java.lang.String value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>projectdb.adviser.pictureUrl</code>.
	 */
	public java.lang.String getPictureurl() {
		return (java.lang.String) getValue(8);
	}

	/**
	 * Setter for <code>projectdb.adviser.startDate</code>.
	 */
	public void setStartdate(java.lang.String value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>projectdb.adviser.startDate</code>.
	 */
	public java.lang.String getStartdate() {
		return (java.lang.String) getValue(9);
	}

	/**
	 * Setter for <code>projectdb.adviser.endDate</code>.
	 */
	public void setEnddate(java.lang.String value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>projectdb.adviser.endDate</code>.
	 */
	public java.lang.String getEnddate() {
		return (java.lang.String) getValue(10);
	}

	/**
	 * Setter for <code>projectdb.adviser.notes</code>.
	 */
	public void setNotes(java.lang.String value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>projectdb.adviser.notes</code>.
	 */
	public java.lang.String getNotes() {
		return (java.lang.String) getValue(11);
	}

	/**
	 * Setter for <code>projectdb.adviser.isAdmin</code>.
	 */
	public void setIsadmin(java.lang.Byte value) {
		setValue(12, value);
	}

	/**
	 * Getter for <code>projectdb.adviser.isAdmin</code>.
	 */
	public java.lang.Byte getIsadmin() {
		return (java.lang.Byte) getValue(12);
	}

	/**
	 * Setter for <code>projectdb.adviser.tuakiriUniqueId</code>.
	 */
	public void setTuakiriuniqueid(java.lang.String value) {
		setValue(13, value);
	}

	/**
	 * Getter for <code>projectdb.adviser.tuakiriUniqueId</code>.
	 */
	public java.lang.String getTuakiriuniqueid() {
		return (java.lang.String) getValue(13);
	}

	/**
	 * Setter for <code>projectdb.adviser.tuakiriToken</code>. DEPRECATED
	 */
	public void setTuakiritoken(java.lang.String value) {
		setValue(14, value);
	}

	/**
	 * Getter for <code>projectdb.adviser.tuakiriToken</code>. DEPRECATED
	 */
	public java.lang.String getTuakiritoken() {
		return (java.lang.String) getValue(14);
	}

	/**
	 * Setter for <code>projectdb.adviser.lastModified</code>. Indicates when this record was last modified
	 */
	public void setLastmodified(java.sql.Timestamp value) {
		setValue(15, value);
	}

	/**
	 * Getter for <code>projectdb.adviser.lastModified</code>. Indicates when this record was last modified
	 */
	public java.sql.Timestamp getLastmodified() {
		return (java.sql.Timestamp) getValue(15);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record16 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row16<java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Byte, java.lang.String, java.lang.String, java.sql.Timestamp> fieldsRow() {
		return (org.jooq.Row16) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row16<java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Byte, java.lang.String, java.lang.String, java.sql.Timestamp> valuesRow() {
		return (org.jooq.Row16) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return projectdb.tables.Adviser.ADVISER.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return projectdb.tables.Adviser.ADVISER.FULLNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return projectdb.tables.Adviser.ADVISER.EMAIL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field4() {
		return projectdb.tables.Adviser.ADVISER.PHONE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field5() {
		return projectdb.tables.Adviser.ADVISER.ADDRESS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field6() {
		return projectdb.tables.Adviser.ADVISER.INSTITUTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field7() {
		return projectdb.tables.Adviser.ADVISER.DIVISION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field8() {
		return projectdb.tables.Adviser.ADVISER.DEPARTMENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field9() {
		return projectdb.tables.Adviser.ADVISER.PICTUREURL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field10() {
		return projectdb.tables.Adviser.ADVISER.STARTDATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field11() {
		return projectdb.tables.Adviser.ADVISER.ENDDATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field12() {
		return projectdb.tables.Adviser.ADVISER.NOTES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Byte> field13() {
		return projectdb.tables.Adviser.ADVISER.ISADMIN;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field14() {
		return projectdb.tables.Adviser.ADVISER.TUAKIRIUNIQUEID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field15() {
		return projectdb.tables.Adviser.ADVISER.TUAKIRITOKEN;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field16() {
		return projectdb.tables.Adviser.ADVISER.LASTMODIFIED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getFullname();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getEmail();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value4() {
		return getPhone();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value5() {
		return getAddress();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value6() {
		return getInstitution();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value7() {
		return getDivision();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value8() {
		return getDepartment();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value9() {
		return getPictureurl();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value10() {
		return getStartdate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value11() {
		return getEnddate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value12() {
		return getNotes();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Byte value13() {
		return getIsadmin();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value14() {
		return getTuakiriuniqueid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value15() {
		return getTuakiritoken();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value16() {
		return getLastmodified();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AdviserRecord value1(java.lang.Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AdviserRecord value2(java.lang.String value) {
		setFullname(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AdviserRecord value3(java.lang.String value) {
		setEmail(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AdviserRecord value4(java.lang.String value) {
		setPhone(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AdviserRecord value5(java.lang.String value) {
		setAddress(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AdviserRecord value6(java.lang.String value) {
		setInstitution(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AdviserRecord value7(java.lang.String value) {
		setDivision(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AdviserRecord value8(java.lang.String value) {
		setDepartment(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AdviserRecord value9(java.lang.String value) {
		setPictureurl(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AdviserRecord value10(java.lang.String value) {
		setStartdate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AdviserRecord value11(java.lang.String value) {
		setEnddate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AdviserRecord value12(java.lang.String value) {
		setNotes(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AdviserRecord value13(java.lang.Byte value) {
		setIsadmin(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AdviserRecord value14(java.lang.String value) {
		setTuakiriuniqueid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AdviserRecord value15(java.lang.String value) {
		setTuakiritoken(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AdviserRecord value16(java.sql.Timestamp value) {
		setLastmodified(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AdviserRecord values(java.lang.Integer value1, java.lang.String value2, java.lang.String value3, java.lang.String value4, java.lang.String value5, java.lang.String value6, java.lang.String value7, java.lang.String value8, java.lang.String value9, java.lang.String value10, java.lang.String value11, java.lang.String value12, java.lang.Byte value13, java.lang.String value14, java.lang.String value15, java.sql.Timestamp value16) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached AdviserRecord
	 */
	public AdviserRecord() {
		super(projectdb.tables.Adviser.ADVISER);
	}

	/**
	 * Create a detached, initialised AdviserRecord
	 */
	public AdviserRecord(java.lang.Integer id, java.lang.String fullname, java.lang.String email, java.lang.String phone, java.lang.String address, java.lang.String institution, java.lang.String division, java.lang.String department, java.lang.String pictureurl, java.lang.String startdate, java.lang.String enddate, java.lang.String notes, java.lang.Byte isadmin, java.lang.String tuakiriuniqueid, java.lang.String tuakiritoken, java.sql.Timestamp lastmodified) {
		super(projectdb.tables.Adviser.ADVISER);

		setValue(0, id);
		setValue(1, fullname);
		setValue(2, email);
		setValue(3, phone);
		setValue(4, address);
		setValue(5, institution);
		setValue(6, division);
		setValue(7, department);
		setValue(8, pictureurl);
		setValue(9, startdate);
		setValue(10, enddate);
		setValue(11, notes);
		setValue(12, isadmin);
		setValue(13, tuakiriuniqueid);
		setValue(14, tuakiritoken);
		setValue(15, lastmodified);
	}
}
