/**
 * This class is generated by jOOQ
 */
package projectdb.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.2" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjectKpi extends org.jooq.impl.TableImpl<projectdb.tables.records.ProjectKpiRecord> {

	private static final long serialVersionUID = -340745211;

	/**
	 * The singleton instance of <code>projectdb.project_kpi</code>
	 */
	public static final projectdb.tables.ProjectKpi PROJECT_KPI = new projectdb.tables.ProjectKpi();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<projectdb.tables.records.ProjectKpiRecord> getRecordType() {
		return projectdb.tables.records.ProjectKpiRecord.class;
	}

	/**
	 * The column <code>projectdb.project_kpi.id</code>.
	 */
	public final org.jooq.TableField<projectdb.tables.records.ProjectKpiRecord, java.lang.Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>projectdb.project_kpi.kpiId</code>.
	 */
	public final org.jooq.TableField<projectdb.tables.records.ProjectKpiRecord, java.lang.Integer> KPIID = createField("kpiId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>projectdb.project_kpi.projectId</code>.
	 */
	public final org.jooq.TableField<projectdb.tables.records.ProjectKpiRecord, java.lang.Integer> PROJECTID = createField("projectId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>projectdb.project_kpi.date</code>.
	 */
	public final org.jooq.TableField<projectdb.tables.records.ProjectKpiRecord, java.lang.String> DATE = createField("date", org.jooq.impl.SQLDataType.VARCHAR.length(300).nullable(false), this, "");

	/**
	 * The column <code>projectdb.project_kpi.adviserId</code>.
	 */
	public final org.jooq.TableField<projectdb.tables.records.ProjectKpiRecord, java.lang.Integer> ADVISERID = createField("adviserId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>projectdb.project_kpi.value</code>.
	 */
	public final org.jooq.TableField<projectdb.tables.records.ProjectKpiRecord, java.lang.Double> VALUE = createField("value", org.jooq.impl.SQLDataType.FLOAT, this, "");

	/**
	 * The column <code>projectdb.project_kpi.notes</code>.
	 */
	public final org.jooq.TableField<projectdb.tables.records.ProjectKpiRecord, java.lang.String> NOTES = createField("notes", org.jooq.impl.SQLDataType.CLOB.length(65535), this, "");

	/**
	 * The column <code>projectdb.project_kpi.code</code>.
	 */
	public final org.jooq.TableField<projectdb.tables.records.ProjectKpiRecord, java.lang.Integer> CODE = createField("code", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>projectdb.project_kpi</code> table reference
	 */
	public ProjectKpi() {
		this("project_kpi", null);
	}

	/**
	 * Create an aliased <code>projectdb.project_kpi</code> table reference
	 */
	public ProjectKpi(java.lang.String alias) {
		this(alias, projectdb.tables.ProjectKpi.PROJECT_KPI);
	}

	private ProjectKpi(java.lang.String alias, org.jooq.Table<projectdb.tables.records.ProjectKpiRecord> aliased) {
		this(alias, aliased, null);
	}

	private ProjectKpi(java.lang.String alias, org.jooq.Table<projectdb.tables.records.ProjectKpiRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, projectdb.Projectdb.PROJECTDB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<projectdb.tables.records.ProjectKpiRecord, java.lang.Integer> getIdentity() {
		return projectdb.Keys.IDENTITY_PROJECT_KPI;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<projectdb.tables.records.ProjectKpiRecord> getPrimaryKey() {
		return projectdb.Keys.KEY_PROJECT_KPI_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<projectdb.tables.records.ProjectKpiRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<projectdb.tables.records.ProjectKpiRecord>>asList(projectdb.Keys.KEY_PROJECT_KPI_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<projectdb.tables.records.ProjectKpiRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<projectdb.tables.records.ProjectKpiRecord, ?>>asList(projectdb.Keys.PROJECT_KPI_IBFK_1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public projectdb.tables.ProjectKpi as(java.lang.String alias) {
		return new projectdb.tables.ProjectKpi(alias, this);
	}

	/**
	 * Rename this table
	 */
	public projectdb.tables.ProjectKpi rename(java.lang.String name) {
		return new projectdb.tables.ProjectKpi(name, null);
	}
}
