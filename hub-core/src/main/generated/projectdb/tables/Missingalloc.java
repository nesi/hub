/**
 * This class is generated by jOOQ
 */
package projectdb.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.2" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Missingalloc extends org.jooq.impl.TableImpl<projectdb.tables.records.MissingallocRecord> {

	private static final long serialVersionUID = 1498195399;

	/**
	 * The singleton instance of <code>projectdb.missingalloc</code>
	 */
	public static final projectdb.tables.Missingalloc MISSINGALLOC = new projectdb.tables.Missingalloc();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<projectdb.tables.records.MissingallocRecord> getRecordType() {
		return projectdb.tables.records.MissingallocRecord.class;
	}

	/**
	 * The column <code>projectdb.missingalloc.id</code>.
	 */
	public final org.jooq.TableField<projectdb.tables.records.MissingallocRecord, java.lang.Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>projectdb.missingalloc.g_modification_time</code>.
	 */
	public final org.jooq.TableField<projectdb.tables.records.MissingallocRecord, java.lang.Integer> G_MODIFICATION_TIME = createField("g_modification_time", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>projectdb.missingalloc.g_creation_time</code>.
	 */
	public final org.jooq.TableField<projectdb.tables.records.MissingallocRecord, java.lang.Integer> G_CREATION_TIME = createField("g_creation_time", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>projectdb.missingalloc.g_account</code>.
	 */
	public final org.jooq.TableField<projectdb.tables.records.MissingallocRecord, java.lang.Integer> G_ACCOUNT = createField("g_account", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>projectdb.missingalloc.g_credit_limit</code>.
	 */
	public final org.jooq.TableField<projectdb.tables.records.MissingallocRecord, java.lang.String> G_CREDIT_LIMIT = createField("g_credit_limit", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>projectdb.missingalloc.g_project</code>.
	 */
	public final org.jooq.TableField<projectdb.tables.records.MissingallocRecord, java.lang.String> G_PROJECT = createField("g_project", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>projectdb.missingalloc.g_active</code>.
	 */
	public final org.jooq.TableField<projectdb.tables.records.MissingallocRecord, java.lang.String> G_ACTIVE = createField("g_active", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>projectdb.missingalloc.g_facility</code>.
	 */
	public final org.jooq.TableField<projectdb.tables.records.MissingallocRecord, java.lang.String> G_FACILITY = createField("g_facility", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>projectdb.missingalloc</code> table reference
	 */
	public Missingalloc() {
		this("missingalloc", null);
	}

	/**
	 * Create an aliased <code>projectdb.missingalloc</code> table reference
	 */
	public Missingalloc(java.lang.String alias) {
		this(alias, projectdb.tables.Missingalloc.MISSINGALLOC);
	}

	private Missingalloc(java.lang.String alias, org.jooq.Table<projectdb.tables.records.MissingallocRecord> aliased) {
		this(alias, aliased, null);
	}

	private Missingalloc(java.lang.String alias, org.jooq.Table<projectdb.tables.records.MissingallocRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, projectdb.Projectdb.PROJECTDB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<projectdb.tables.records.MissingallocRecord, java.lang.Integer> getIdentity() {
		return projectdb.Keys.IDENTITY_MISSINGALLOC;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<projectdb.tables.records.MissingallocRecord> getPrimaryKey() {
		return projectdb.Keys.KEY_MISSINGALLOC_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<projectdb.tables.records.MissingallocRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<projectdb.tables.records.MissingallocRecord>>asList(projectdb.Keys.KEY_MISSINGALLOC_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public projectdb.tables.Missingalloc as(java.lang.String alias) {
		return new projectdb.tables.Missingalloc(alias, this);
	}

	/**
	 * Rename this table
	 */
	public projectdb.tables.Missingalloc rename(java.lang.String name) {
		return new projectdb.tables.Missingalloc(name, null);
	}
}
