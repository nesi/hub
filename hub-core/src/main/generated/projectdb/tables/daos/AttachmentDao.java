/**
 * This class is generated by jOOQ
 */
package projectdb.tables.daos;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.2" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AttachmentDao extends org.jooq.impl.DAOImpl<projectdb.tables.records.AttachmentRecord, projectdb.tables.pojos.Attachment, java.lang.Integer> {

	/**
	 * Create a new AttachmentDao without any configuration
	 */
	public AttachmentDao() {
		super(projectdb.tables.Attachment.ATTACHMENT, projectdb.tables.pojos.Attachment.class);
	}

	/**
	 * Create a new AttachmentDao with an attached configuration
	 */
	public AttachmentDao(org.jooq.Configuration configuration) {
		super(projectdb.tables.Attachment.ATTACHMENT, projectdb.tables.pojos.Attachment.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected java.lang.Integer getId(projectdb.tables.pojos.Attachment object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Attachment> fetchById(java.lang.Integer... values) {
		return fetch(projectdb.tables.Attachment.ATTACHMENT.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public projectdb.tables.pojos.Attachment fetchOneById(java.lang.Integer value) {
		return fetchOne(projectdb.tables.Attachment.ATTACHMENT.ID, value);
	}

	/**
	 * Fetch records that have <code>projectId IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Attachment> fetchByProjectid(java.lang.Integer... values) {
		return fetch(projectdb.tables.Attachment.ATTACHMENT.PROJECTID, values);
	}

	/**
	 * Fetch records that have <code>followupId IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Attachment> fetchByFollowupid(java.lang.Integer... values) {
		return fetch(projectdb.tables.Attachment.ATTACHMENT.FOLLOWUPID, values);
	}

	/**
	 * Fetch records that have <code>reviewId IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Attachment> fetchByReviewid(java.lang.Integer... values) {
		return fetch(projectdb.tables.Attachment.ATTACHMENT.REVIEWID, values);
	}

	/**
	 * Fetch records that have <code>adviserActionId IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Attachment> fetchByAdviseractionid(java.lang.Integer... values) {
		return fetch(projectdb.tables.Attachment.ATTACHMENT.ADVISERACTIONID, values);
	}

	/**
	 * Fetch records that have <code>description IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Attachment> fetchByDescription(java.lang.String... values) {
		return fetch(projectdb.tables.Attachment.ATTACHMENT.DESCRIPTION, values);
	}

	/**
	 * Fetch records that have <code>link IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Attachment> fetchByLink(java.lang.String... values) {
		return fetch(projectdb.tables.Attachment.ATTACHMENT.LINK, values);
	}

	/**
	 * Fetch records that have <code>date IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Attachment> fetchByDate(java.lang.String... values) {
		return fetch(projectdb.tables.Attachment.ATTACHMENT.DATE, values);
	}
}
