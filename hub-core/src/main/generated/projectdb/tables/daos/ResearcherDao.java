/**
 * This class is generated by jOOQ
 */
package projectdb.tables.daos;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.2" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResearcherDao extends org.jooq.impl.DAOImpl<projectdb.tables.records.ResearcherRecord, projectdb.tables.pojos.Researcher, java.lang.Integer> {

	/**
	 * Create a new ResearcherDao without any configuration
	 */
	public ResearcherDao() {
		super(projectdb.tables.Researcher.RESEARCHER, projectdb.tables.pojos.Researcher.class);
	}

	/**
	 * Create a new ResearcherDao with an attached configuration
	 */
	public ResearcherDao(org.jooq.Configuration configuration) {
		super(projectdb.tables.Researcher.RESEARCHER, projectdb.tables.pojos.Researcher.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected java.lang.Integer getId(projectdb.tables.pojos.Researcher object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Researcher> fetchById(java.lang.Integer... values) {
		return fetch(projectdb.tables.Researcher.RESEARCHER.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public projectdb.tables.pojos.Researcher fetchOneById(java.lang.Integer value) {
		return fetchOne(projectdb.tables.Researcher.RESEARCHER.ID, value);
	}

	/**
	 * Fetch records that have <code>fullName IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Researcher> fetchByFullname(java.lang.String... values) {
		return fetch(projectdb.tables.Researcher.RESEARCHER.FULLNAME, values);
	}

	/**
	 * Fetch records that have <code>preferredName IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Researcher> fetchByPreferredname(java.lang.String... values) {
		return fetch(projectdb.tables.Researcher.RESEARCHER.PREFERREDNAME, values);
	}

	/**
	 * Fetch records that have <code>email IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Researcher> fetchByEmail(java.lang.String... values) {
		return fetch(projectdb.tables.Researcher.RESEARCHER.EMAIL, values);
	}

	/**
	 * Fetch records that have <code>phone IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Researcher> fetchByPhone(java.lang.String... values) {
		return fetch(projectdb.tables.Researcher.RESEARCHER.PHONE, values);
	}

	/**
	 * Fetch records that have <code>institution IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Researcher> fetchByInstitution(java.lang.String... values) {
		return fetch(projectdb.tables.Researcher.RESEARCHER.INSTITUTION, values);
	}

	/**
	 * Fetch records that have <code>division IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Researcher> fetchByDivision(java.lang.String... values) {
		return fetch(projectdb.tables.Researcher.RESEARCHER.DIVISION, values);
	}

	/**
	 * Fetch records that have <code>department IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Researcher> fetchByDepartment(java.lang.String... values) {
		return fetch(projectdb.tables.Researcher.RESEARCHER.DEPARTMENT, values);
	}

	/**
	 * Fetch records that have <code>institutionalRoleId IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Researcher> fetchByInstitutionalroleid(java.lang.Integer... values) {
		return fetch(projectdb.tables.Researcher.RESEARCHER.INSTITUTIONALROLEID, values);
	}

	/**
	 * Fetch records that have <code>pictureUrl IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Researcher> fetchByPictureurl(java.lang.String... values) {
		return fetch(projectdb.tables.Researcher.RESEARCHER.PICTUREURL, values);
	}

	/**
	 * Fetch records that have <code>startDate IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Researcher> fetchByStartdate(java.lang.String... values) {
		return fetch(projectdb.tables.Researcher.RESEARCHER.STARTDATE, values);
	}

	/**
	 * Fetch records that have <code>endDate IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Researcher> fetchByEnddate(java.lang.String... values) {
		return fetch(projectdb.tables.Researcher.RESEARCHER.ENDDATE, values);
	}

	/**
	 * Fetch records that have <code>notes IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Researcher> fetchByNotes(java.lang.String... values) {
		return fetch(projectdb.tables.Researcher.RESEARCHER.NOTES, values);
	}

	/**
	 * Fetch records that have <code>statusId IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Researcher> fetchByStatusid(java.lang.Integer... values) {
		return fetch(projectdb.tables.Researcher.RESEARCHER.STATUSID, values);
	}

	/**
	 * Fetch records that have <code>tuakiriToken IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Researcher> fetchByTuakiritoken(java.lang.String... values) {
		return fetch(projectdb.tables.Researcher.RESEARCHER.TUAKIRITOKEN, values);
	}

	/**
	 * Fetch records that have <code>lastModified IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Researcher> fetchByLastmodified(java.sql.Timestamp... values) {
		return fetch(projectdb.tables.Researcher.RESEARCHER.LASTMODIFIED, values);
	}
}
