/**
 * This class is generated by jOOQ
 */
package projectdb.tables.daos;

/**
 * This class is generated by jOOQ.
 *
 * NeSI and CeR staff
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.2" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AdviserDao extends org.jooq.impl.DAOImpl<projectdb.tables.records.AdviserRecord, projectdb.tables.pojos.Adviser, java.lang.Integer> {

	/**
	 * Create a new AdviserDao without any configuration
	 */
	public AdviserDao() {
		super(projectdb.tables.Adviser.ADVISER, projectdb.tables.pojos.Adviser.class);
	}

	/**
	 * Create a new AdviserDao with an attached configuration
	 */
	public AdviserDao(org.jooq.Configuration configuration) {
		super(projectdb.tables.Adviser.ADVISER, projectdb.tables.pojos.Adviser.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected java.lang.Integer getId(projectdb.tables.pojos.Adviser object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Adviser> fetchById(java.lang.Integer... values) {
		return fetch(projectdb.tables.Adviser.ADVISER.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public projectdb.tables.pojos.Adviser fetchOneById(java.lang.Integer value) {
		return fetchOne(projectdb.tables.Adviser.ADVISER.ID, value);
	}

	/**
	 * Fetch records that have <code>fullName IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Adviser> fetchByFullname(java.lang.String... values) {
		return fetch(projectdb.tables.Adviser.ADVISER.FULLNAME, values);
	}

	/**
	 * Fetch records that have <code>email IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Adviser> fetchByEmail(java.lang.String... values) {
		return fetch(projectdb.tables.Adviser.ADVISER.EMAIL, values);
	}

	/**
	 * Fetch records that have <code>phone IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Adviser> fetchByPhone(java.lang.String... values) {
		return fetch(projectdb.tables.Adviser.ADVISER.PHONE, values);
	}

	/**
	 * Fetch records that have <code>address IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Adviser> fetchByAddress(java.lang.String... values) {
		return fetch(projectdb.tables.Adviser.ADVISER.ADDRESS, values);
	}

	/**
	 * Fetch records that have <code>institution IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Adviser> fetchByInstitution(java.lang.String... values) {
		return fetch(projectdb.tables.Adviser.ADVISER.INSTITUTION, values);
	}

	/**
	 * Fetch records that have <code>division IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Adviser> fetchByDivision(java.lang.String... values) {
		return fetch(projectdb.tables.Adviser.ADVISER.DIVISION, values);
	}

	/**
	 * Fetch records that have <code>department IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Adviser> fetchByDepartment(java.lang.String... values) {
		return fetch(projectdb.tables.Adviser.ADVISER.DEPARTMENT, values);
	}

	/**
	 * Fetch records that have <code>pictureUrl IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Adviser> fetchByPictureurl(java.lang.String... values) {
		return fetch(projectdb.tables.Adviser.ADVISER.PICTUREURL, values);
	}

	/**
	 * Fetch records that have <code>startDate IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Adviser> fetchByStartdate(java.lang.String... values) {
		return fetch(projectdb.tables.Adviser.ADVISER.STARTDATE, values);
	}

	/**
	 * Fetch records that have <code>endDate IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Adviser> fetchByEnddate(java.lang.String... values) {
		return fetch(projectdb.tables.Adviser.ADVISER.ENDDATE, values);
	}

	/**
	 * Fetch records that have <code>notes IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Adviser> fetchByNotes(java.lang.String... values) {
		return fetch(projectdb.tables.Adviser.ADVISER.NOTES, values);
	}

	/**
	 * Fetch records that have <code>isAdmin IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Adviser> fetchByIsadmin(java.lang.Byte... values) {
		return fetch(projectdb.tables.Adviser.ADVISER.ISADMIN, values);
	}

	/**
	 * Fetch records that have <code>tuakiriUniqueId IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Adviser> fetchByTuakiriuniqueid(java.lang.String... values) {
		return fetch(projectdb.tables.Adviser.ADVISER.TUAKIRIUNIQUEID, values);
	}

	/**
	 * Fetch records that have <code>tuakiriToken IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Adviser> fetchByTuakiritoken(java.lang.String... values) {
		return fetch(projectdb.tables.Adviser.ADVISER.TUAKIRITOKEN, values);
	}

	/**
	 * Fetch records that have <code>lastModified IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Adviser> fetchByLastmodified(java.sql.Timestamp... values) {
		return fetch(projectdb.tables.Adviser.ADVISER.LASTMODIFIED, values);
	}
}
