/**
 * This class is generated by jOOQ
 */
package projectdb.tables.daos;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.2" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjectreviewDao extends org.jooq.impl.DAOImpl<projectdb.tables.records.ProjectreviewRecord, projectdb.tables.pojos.Projectreview, java.lang.Integer> {

	/**
	 * Create a new ProjectreviewDao without any configuration
	 */
	public ProjectreviewDao() {
		super(projectdb.tables.Projectreview.PROJECTREVIEW, projectdb.tables.pojos.Projectreview.class);
	}

	/**
	 * Create a new ProjectreviewDao with an attached configuration
	 */
	public ProjectreviewDao(org.jooq.Configuration configuration) {
		super(projectdb.tables.Projectreview.PROJECTREVIEW, projectdb.tables.pojos.Projectreview.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected java.lang.Integer getId(projectdb.tables.pojos.Projectreview object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Projectreview> fetchById(java.lang.Integer... values) {
		return fetch(projectdb.tables.Projectreview.PROJECTREVIEW.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public projectdb.tables.pojos.Projectreview fetchOneById(java.lang.Integer value) {
		return fetchOne(projectdb.tables.Projectreview.PROJECTREVIEW.ID, value);
	}

	/**
	 * Fetch records that have <code>projectId IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Projectreview> fetchByProjectid(java.lang.Integer... values) {
		return fetch(projectdb.tables.Projectreview.PROJECTREVIEW.PROJECTID, values);
	}

	/**
	 * Fetch records that have <code>adviserId IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Projectreview> fetchByAdviserid(java.lang.Integer... values) {
		return fetch(projectdb.tables.Projectreview.PROJECTREVIEW.ADVISERID, values);
	}

	/**
	 * Fetch records that have <code>date IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Projectreview> fetchByDate(java.lang.String... values) {
		return fetch(projectdb.tables.Projectreview.PROJECTREVIEW.DATE, values);
	}

	/**
	 * Fetch records that have <code>notes IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Projectreview> fetchByNotes(java.lang.String... values) {
		return fetch(projectdb.tables.Projectreview.PROJECTREVIEW.NOTES, values);
	}
}
