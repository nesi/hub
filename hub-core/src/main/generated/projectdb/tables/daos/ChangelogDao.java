/**
 * This class is generated by jOOQ
 */
package projectdb.tables.daos;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.2" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChangelogDao extends org.jooq.impl.DAOImpl<projectdb.tables.records.ChangelogRecord, projectdb.tables.pojos.Changelog, java.lang.Integer> {

	/**
	 * Create a new ChangelogDao without any configuration
	 */
	public ChangelogDao() {
		super(projectdb.tables.Changelog.CHANGELOG, projectdb.tables.pojos.Changelog.class);
	}

	/**
	 * Create a new ChangelogDao with an attached configuration
	 */
	public ChangelogDao(org.jooq.Configuration configuration) {
		super(projectdb.tables.Changelog.CHANGELOG, projectdb.tables.pojos.Changelog.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected java.lang.Integer getId(projectdb.tables.pojos.Changelog object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Changelog> fetchById(java.lang.Integer... values) {
		return fetch(projectdb.tables.Changelog.CHANGELOG.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public projectdb.tables.pojos.Changelog fetchOneById(java.lang.Integer value) {
		return fetchOne(projectdb.tables.Changelog.CHANGELOG.ID, value);
	}

	/**
	 * Fetch records that have <code>tbl IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Changelog> fetchByTbl(java.lang.String... values) {
		return fetch(projectdb.tables.Changelog.CHANGELOG.TBL, values);
	}

	/**
	 * Fetch records that have <code>tbl_id IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Changelog> fetchByTblId(java.lang.Integer... values) {
		return fetch(projectdb.tables.Changelog.CHANGELOG.TBL_ID, values);
	}

	/**
	 * Fetch records that have <code>field IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Changelog> fetchByField(java.lang.String... values) {
		return fetch(projectdb.tables.Changelog.CHANGELOG.FIELD, values);
	}

	/**
	 * Fetch records that have <code>old_val IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Changelog> fetchByOldVal(java.lang.String... values) {
		return fetch(projectdb.tables.Changelog.CHANGELOG.OLD_VAL, values);
	}

	/**
	 * Fetch records that have <code>new_val IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Changelog> fetchByNewVal(java.lang.String... values) {
		return fetch(projectdb.tables.Changelog.CHANGELOG.NEW_VAL, values);
	}

	/**
	 * Fetch records that have <code>timestamp IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Changelog> fetchByTimestamp(java.sql.Timestamp... values) {
		return fetch(projectdb.tables.Changelog.CHANGELOG.TIMESTAMP, values);
	}

	/**
	 * Fetch records that have <code>adviserId IN (values)</code>
	 */
	public java.util.List<projectdb.tables.pojos.Changelog> fetchByAdviserid(java.lang.Integer... values) {
		return fetch(projectdb.tables.Changelog.CHANGELOG.ADVISERID, values);
	}
}
