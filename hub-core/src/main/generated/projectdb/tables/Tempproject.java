/**
 * This class is generated by jOOQ
 */
package projectdb.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.2" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tempproject extends org.jooq.impl.TableImpl<projectdb.tables.records.TempprojectRecord> {

	private static final long serialVersionUID = 1379951601;

	/**
	 * The singleton instance of <code>projectdb.tempproject</code>
	 */
	public static final projectdb.tables.Tempproject TEMPPROJECT = new projectdb.tables.Tempproject();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<projectdb.tables.records.TempprojectRecord> getRecordType() {
		return projectdb.tables.records.TempprojectRecord.class;
	}

	/**
	 * The column <code>projectdb.tempproject.id</code>.
	 */
	public final org.jooq.TableField<projectdb.tables.records.TempprojectRecord, java.lang.Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>projectdb.tempproject.owner</code>.
	 */
	public final org.jooq.TableField<projectdb.tables.records.TempprojectRecord, java.lang.String> OWNER = createField("owner", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>projectdb.tempproject.lastVisited</code>.
	 */
	public final org.jooq.TableField<projectdb.tables.records.TempprojectRecord, java.lang.Integer> LASTVISITED = createField("lastVisited", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>projectdb.tempproject.projectString</code>.
	 */
	public final org.jooq.TableField<projectdb.tables.records.TempprojectRecord, java.lang.String> PROJECTSTRING = createField("projectString", org.jooq.impl.SQLDataType.CLOB.length(65535), this, "");

	/**
	 * Create a <code>projectdb.tempproject</code> table reference
	 */
	public Tempproject() {
		this("tempproject", null);
	}

	/**
	 * Create an aliased <code>projectdb.tempproject</code> table reference
	 */
	public Tempproject(java.lang.String alias) {
		this(alias, projectdb.tables.Tempproject.TEMPPROJECT);
	}

	private Tempproject(java.lang.String alias, org.jooq.Table<projectdb.tables.records.TempprojectRecord> aliased) {
		this(alias, aliased, null);
	}

	private Tempproject(java.lang.String alias, org.jooq.Table<projectdb.tables.records.TempprojectRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, projectdb.Projectdb.PROJECTDB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public projectdb.tables.Tempproject as(java.lang.String alias) {
		return new projectdb.tables.Tempproject(alias, this);
	}

	/**
	 * Rename this table
	 */
	public projectdb.tables.Tempproject rename(java.lang.String name) {
		return new projectdb.tables.Tempproject(name, null);
	}
}
