/**
 * This class is generated by jOOQ
 */
package projectdb.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.2" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Projecttype extends org.jooq.impl.TableImpl<projectdb.tables.records.ProjecttypeRecord> {

	private static final long serialVersionUID = -272338998;

	/**
	 * The singleton instance of <code>projectdb.projecttype</code>
	 */
	public static final projectdb.tables.Projecttype PROJECTTYPE = new projectdb.tables.Projecttype();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<projectdb.tables.records.ProjecttypeRecord> getRecordType() {
		return projectdb.tables.records.ProjecttypeRecord.class;
	}

	/**
	 * The column <code>projectdb.projecttype.id</code>.
	 */
	public final org.jooq.TableField<projectdb.tables.records.ProjecttypeRecord, java.lang.Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>projectdb.projecttype.name</code>.
	 */
	public final org.jooq.TableField<projectdb.tables.records.ProjecttypeRecord, java.lang.String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * Create a <code>projectdb.projecttype</code> table reference
	 */
	public Projecttype() {
		this("projecttype", null);
	}

	/**
	 * Create an aliased <code>projectdb.projecttype</code> table reference
	 */
	public Projecttype(java.lang.String alias) {
		this(alias, projectdb.tables.Projecttype.PROJECTTYPE);
	}

	private Projecttype(java.lang.String alias, org.jooq.Table<projectdb.tables.records.ProjecttypeRecord> aliased) {
		this(alias, aliased, null);
	}

	private Projecttype(java.lang.String alias, org.jooq.Table<projectdb.tables.records.ProjecttypeRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, projectdb.Projectdb.PROJECTDB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<projectdb.tables.records.ProjecttypeRecord> getPrimaryKey() {
		return projectdb.Keys.KEY_PROJECTTYPE_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<projectdb.tables.records.ProjecttypeRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<projectdb.tables.records.ProjecttypeRecord>>asList(projectdb.Keys.KEY_PROJECTTYPE_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public projectdb.tables.Projecttype as(java.lang.String alias) {
		return new projectdb.tables.Projecttype(alias, this);
	}

	/**
	 * Rename this table
	 */
	public projectdb.tables.Projecttype rename(java.lang.String name) {
		return new projectdb.tables.Projecttype(name, null);
	}
}
