/**
 * This class is generated by jOOQ
 */
package projectdb.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.2" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Adviseraction extends org.jooq.impl.TableImpl<projectdb.tables.records.AdviseractionRecord> {

	private static final long serialVersionUID = -1643529204;

	/**
	 * The singleton instance of <code>projectdb.adviseraction</code>
	 */
	public static final projectdb.tables.Adviseraction ADVISERACTION = new projectdb.tables.Adviseraction();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<projectdb.tables.records.AdviseractionRecord> getRecordType() {
		return projectdb.tables.records.AdviseractionRecord.class;
	}

	/**
	 * The column <code>projectdb.adviseraction.id</code>.
	 */
	public final org.jooq.TableField<projectdb.tables.records.AdviseractionRecord, java.lang.Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>projectdb.adviseraction.projectId</code>.
	 */
	public final org.jooq.TableField<projectdb.tables.records.AdviseractionRecord, java.lang.Integer> PROJECTID = createField("projectId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>projectdb.adviseraction.date</code>.
	 */
	public final org.jooq.TableField<projectdb.tables.records.AdviseractionRecord, java.lang.String> DATE = createField("date", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>projectdb.adviseraction.adviserId</code>.
	 */
	public final org.jooq.TableField<projectdb.tables.records.AdviseractionRecord, java.lang.Integer> ADVISERID = createField("adviserId", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>projectdb.adviseraction.action</code>.
	 */
	public final org.jooq.TableField<projectdb.tables.records.AdviseractionRecord, java.lang.String> ACTION = createField("action", org.jooq.impl.SQLDataType.CLOB.length(65535), this, "");

	/**
	 * Create a <code>projectdb.adviseraction</code> table reference
	 */
	public Adviseraction() {
		this("adviseraction", null);
	}

	/**
	 * Create an aliased <code>projectdb.adviseraction</code> table reference
	 */
	public Adviseraction(java.lang.String alias) {
		this(alias, projectdb.tables.Adviseraction.ADVISERACTION);
	}

	private Adviseraction(java.lang.String alias, org.jooq.Table<projectdb.tables.records.AdviseractionRecord> aliased) {
		this(alias, aliased, null);
	}

	private Adviseraction(java.lang.String alias, org.jooq.Table<projectdb.tables.records.AdviseractionRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, projectdb.Projectdb.PROJECTDB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<projectdb.tables.records.AdviseractionRecord, java.lang.Integer> getIdentity() {
		return projectdb.Keys.IDENTITY_ADVISERACTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<projectdb.tables.records.AdviseractionRecord> getPrimaryKey() {
		return projectdb.Keys.KEY_ADVISERACTION_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<projectdb.tables.records.AdviseractionRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<projectdb.tables.records.AdviseractionRecord>>asList(projectdb.Keys.KEY_ADVISERACTION_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<projectdb.tables.records.AdviseractionRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<projectdb.tables.records.AdviseractionRecord, ?>>asList(projectdb.Keys.ADVISERACTION_IBFK_1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public projectdb.tables.Adviseraction as(java.lang.String alias) {
		return new projectdb.tables.Adviseraction(alias, this);
	}

	/**
	 * Rename this table
	 */
	public projectdb.tables.Adviseraction rename(java.lang.String name) {
		return new projectdb.tables.Adviseraction(name, null);
	}
}
